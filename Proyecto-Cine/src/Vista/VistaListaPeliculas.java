/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControladorPelicula;
import Controlador.placeHolder;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Victor Ayora, Veronica Placencia, Geovanny Poma, Azucena Toledo
 */
public class VistaListaPeliculas extends javax.swing.JFrame {

    /**
     * Creates new form VistaListaPeliculas
     */
    DefaultTableModel TablaListaPeliculas = new DefaultTableModel();
    FondoPanel fondo = new FondoPanel();
    ControladorPelicula cp = new ControladorPelicula();
    int id_ex;

    public VistaListaPeliculas() {
        this.setContentPane(fondo);
        this.setExtendedState(6);
        initComponents();
        placeHolder place1 = new placeHolder("Ejm: Bob esponja la pelicula", jTextFieldBuscarPelicula);
        place1.setForeground(Color.gray);
        this.setResizable(false);//no redimenciona la ventana
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldBuscarPelicula = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonBuscarPelicula = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListaPeliculas = new javax.swing.JTable();
        jButtonVerDetalles = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButtonBuscarPelicula1 = new javax.swing.JButton();
        jButtonRegresar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldBuscarPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldBuscarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarPeliculaActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldBuscarPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 470, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 44)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LISTA DE PELÍCULAS");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 610, 70));

        jButtonBuscarPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonBuscarPelicula.setText("Buscar");
        jButtonBuscarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarPeliculaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscarPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 200, 120, 30));

        jTableListaPeliculas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableListaPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Película", "Año", "Director", "Género", "Duración", "Subtítulos", "Formato", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableListaPeliculas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, 980, 340));

        jButtonVerDetalles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonVerDetalles.setText("Ver Detalles");
        jButtonVerDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerDetallesActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVerDetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(1087, 200, 110, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Película:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, -1, -1));

        jButtonBuscarPelicula1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonBuscarPelicula1.setText("Buscar");
        getContentPane().add(jButtonBuscarPelicula1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 200, 120, 30));

        jButtonRegresar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonRegresar1.setText("Regresar");
        jButtonRegresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresar1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRegresar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 650, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBuscarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPeliculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscarPeliculaActionPerformed

    private void jButtonVerDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerDetallesActionPerformed
        int FilaTable = jTableListaPeliculas.getSelectedRow();
        if (FilaTable >= 0) {
            cp.setPelicula(cp.traePelicula((String) TablaListaPeliculas.getValueAt(FilaTable, 0),
                    (String) TablaListaPeliculas.getValueAt(FilaTable, 2)));
            id_ex = cp.getPelicula().getId_pelicula();
            VistaDetallePelicula vdp = new VistaDetallePelicula(id_ex);
            vdp.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila");
        }

    }//GEN-LAST:event_jButtonVerDetallesActionPerformed

    private void jButtonBuscarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarPeliculaActionPerformed
        buscar(jTextFieldBuscarPelicula.getText());
    }//GEN-LAST:event_jButtonBuscarPeliculaActionPerformed

    private void jButtonRegresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresar1ActionPerformed
        VistaAdministracionPeliculas vap = new VistaAdministracionPeliculas();
        vap.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButtonRegresar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaListaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaListaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaListaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaListaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaListaPeliculas().setVisible(true);
            }
        });
    }

    private void cargarTabla() {
        cp.setPeliculas(cp.cargarPeliculas());
        TablaListaPeliculas = (DefaultTableModel) jTableListaPeliculas.getModel();
        for (int i = 0; i < cp.getPeliculas().size(); i++) {                                    //Bucle que recorre la consulta obtenida
            String estado;
            String sub;
            if (cp.getPeliculas().get(i).getEstado_pelicula() == true) {
                estado = "Disponible";
            } else {
                estado = "No Disponible";
            }
            if (cp.getPeliculas().get(i).getSubtitulos() == true) {
                sub = "SI";
            } else {
                sub = "NO";
            }
            String formato = "";
            if (cp.getPeliculas().get(i).isFormato2D()) {
                if (cp.getPeliculas().get(i).isFormato3D()) {
                    formato = "2D, 3D";
                } else {
                    formato = "2D";
                }
            }
            if (cp.getPeliculas().get(i).isFormato3D()) {
                if (cp.getPeliculas().get(i).isFormato2D()) {
                    formato = "2D, 3D";
                } else {
                    formato = "3D";
                }
            }
            TablaListaPeliculas.addRow(new Object[]{
                cp.getPeliculas().get(i).getTitulo(), cp.getPeliculas().get(i).getAnio(), cp.getPeliculas().get(i).getDirector(),
                cp.getPeliculas().get(i).getGenero(), cp.getPeliculas().get(i).getDuracion(), sub, formato, estado
            });
        }
    }

    private void buscar(String peli) {
        cp.setPelicula(cp.traePeliculaTitulo(peli));
        try {
            if (cp.getPelicula().getId_pelicula() != 0) {
                int var = TablaListaPeliculas.getRowCount();
                for (int i = 0; i < var; i++) {
                    TablaListaPeliculas.removeRow(0);
                }
                String estado;
                String sub;
                if (cp.getPelicula().getEstado_pelicula() == true) {
                    estado = "Disponible";
                } else {
                    estado = "No Disponible";
                }
                if (cp.getPelicula().getSubtitulos() == true) {
                    sub = "SI";
                } else {
                    sub = "NO";
                }
                String formato = "";
                if (cp.getPelicula().isFormato2D()) {
                    if (cp.getPelicula().isFormato3D()) {
                        formato = "2D, 3D";
                    } else {
                        formato = "2D";
                    }
                }
                if (cp.getPelicula().isFormato3D()) {
                    if (cp.getPelicula().isFormato2D()) {
                        formato = "2D, 3D";
                    } else {
                        formato = "3D";
                    }
                }
                TablaListaPeliculas.addRow(new Object[]{
                    cp.getPelicula().getTitulo(), cp.getPelicula().getAnio(), cp.getPelicula().getDirector(),
                    cp.getPelicula().getGenero(), cp.getPelicula().getDuracion(), sub, formato, estado});
            } else {
                JOptionPane.showMessageDialog(null, "La película no existe.");
            }
        } catch (Exception e) {
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscarPelicula;
    private javax.swing.JButton jButtonBuscarPelicula1;
    private javax.swing.JButton jButtonRegresar1;
    private javax.swing.JButton jButtonVerDetalles;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListaPeliculas;
    private javax.swing.JTextField jTextFieldBuscarPelicula;
    // End of variables declaration//GEN-END:variables
    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/Imagenes/LISTA PELICULA.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
